[
{
	"uri": "https://nroduit.github.io/en/getting-started/",
	"title": "Getting Started",
	"tags": [],
	"description": "",
	"content": " Try Weasis now  Live demo with different DICOM dataset. Download the latest weasis-portable.zip \nJust unzip and run it on Windows, Linux or Mac. It requires that a Java Runtime Environment (JRE 8 or greater) be installed on your machine to run. From recent Mac OS X releases you need to install JDK and to disable GateKeeper. Join the google group (Choose Email to read this group) to stay informed about new releases and updates.\n   General Topics  Installing Weasis in DCM4CHEE Tutorials New Forum (Old Weasis Forum) Frequently Asked Questions (FAQs) Dicom Conformance and IHE Get Involved!  Developer Documentation  JIRA bug tracking and project management Building Weasis from source Translating Weasis Plug-ins Weasis Preferences Weasis Architecture Weasis Plug-in Development Guidelines How to build and install a plug-in How to launch Weasis from any environments Building weasis-pacs-connector Rebuild dcm4chee-web  "
},
{
	"uri": "https://nroduit.github.io/en/basics/",
	"title": "Basics",
	"tags": [],
	"description": "",
	"content": "  Weasis Architecture     Shortcuts     Customize    Integration     Preferences     Build Plug-ins     Rebuild dcm4chee-web      Weasis Commands     Dicom Conformance     "
},
{
	"uri": "https://nroduit.github.io/en/getting-started/dcm4chee/",
	"title": "Embedding in dcm4chee",
	"tags": [],
	"description": "How installing Weasis to be the default web viewer of dcm4chee web interface",
	"content": " This page describes how installing Weasis to be the default web viewer of dcm4chee web interface.\nWeasis is launched from the dcm4chee administrative web interface, as shown in the pictures below. It may also be copied to a CD (or other removable devices) with images.\n   Weasis in dcm4chee-arc-light\n      Weasis in dcm4chee-web3\n      Weasis in dcm4chee-web\n                                For dcm4chee-arc-light  Install dcm4chee, if not already done. Go here and download these Weasis files. Download issue: Some browsers (Internet Explorer) may rename war files to zip. If so, use the Save As option when downloading and change the name back to war.\n  From the folder with the latest version number:  weasis.war weasis-i18n.war (Optional for internationalization)  From weasis-pacs-connector folder:  weasis-pacs-connector.war   Open the management console.  Select the “Deployments” tab Add the .war files using the “Add” button (Choose Upload a new deployment or select Replace when the file already exists)  Configure weasis-pacs-connector 6.x and superior (required to change the default WADO configuration).The default configuration is stored in two files inside weasis-pacs-connector.war. To override the default configuration:\n Download the current weasis-connector-default.properties and rename it weasis-pacs-connector.properties, and download dicom-dcm4chee.properties (configuration of the dcm4chee archive)\n Copy the files into wildfly/standalone/configuration.\n As the default configuration of dicom-dcm4chee.properties is defined for dcm4chee-web3, it is necessary to modify at least:  The WADO url of arc-light: arc.wado.url=${server.base.url}/dcm4chee-arc/aets/DCM4CHEE/wado To accept all the syntaxes (otherwise arc-light will uncompress all the images): wado.addparams=\u0026amp;transferSyntax=\\*  Edit the configuration as needed. For example, dcm4chee may be running on a different computer than Weasis, or the AE Title of dcm4chee may have been changed. If so, edit weasis-pacs-connector.properties or dicom-dcm4chee.properties (Change pacs.host, pacs.port, and pacs.aet).\n Optional: add new properties or arguments in the JNLP file, see configuration of weasis-pacs-connector\n  To activate Weasis in dcm4chee-arc-light user interface (required 5.10.2 or superior), you need need to changes two attributes in the configuration\n Go to the configuration or from Configuration \u0026gt; Devices \u0026gt; dcm4chee-arc \u0026gt; Extensions \u0026gt; Archive Device And fill up the following properties:  Invoke Image Display Patient URL: ../../weasis-pacs-connector/IHEInvokeImageDisplay?requestType=PATIENT\u0026amp;patientID={}\n Invoke Image Display Study URL: ../../weasis-pacs-connector/IHEInvokeImageDisplay?requestType=STUDY\u0026amp;studyUID={} Absolute path: The values above starting by \u0026ldquo;../\u0026rdquo; are the default relative path when weasis-pacs-connector is installed in the same JBoss as dcm4chee. Otherwise replace the relative URL by an absolute value, ex: http://YOUR-host:8080/weasis-pacs-connector/...\n The new way of launching Java Westart file (jnlp) will also require an absolute URL as the scheme of the URL is different:\njnlp://YOUR-host:8080/weasis-pacs-connector/...\njnlps://YOUR-host:8443/weasis-pacs-connector/... (TLS connection)\n   Refresh the web page and the view button should appears as in the screenshot above\n Alternative way to configure the activation from a LDAP manager (like Apache Directory Studio)\n Connect to LDAP, see dcm4chee configuration Import weasis.ldif    For dcm4chee-web3  Install dcm4chee, if not already done. For security see also how to limit the server access.\n dcm4chee-web3 is not compatible with versions of dcm4chee before 2.16.0 dcm4chee 2.16.0 to 2.17.0 are compatible with dcm4chee-web3, but the older dcm4chee-web is installed by default. For dcm4chee 2.17.1+, dcm4chee-web3 is already installed.\nTo check if it is the latest version, start dcm4chee-web3 (http://localhost:8080/dcm4chee-web3/), log in, and mouse over the dcm4chee.org icon in the upper right corner.\n  Go here and download these Weasis files. Download issue: Some browsers (Internet Explorer) may rename war files to zip. If so, use the Save As option when downloading and change the name back to war.\n  From the folder with the latest version number:  weasis.war weasis-i18n.war (Optional for internationalization)  From weasis-pacs-connector folder:  dcm4chee-web-weasis.jar weasis-pacs-connector.war   Place these files in the dcm4chee deploy folder (server/default/deploy/).\n To activate Weasis, go to the JMX console (at http://localhost:8080/jmx-console)\n In dcm4chee.web select service=WebConfig and set these two values:\nWebviewerNames = weasis WebviewerBaseUrl = NONE  From weasis-pacs-connector 5.0 WebviewerBaseUrl can have different values:\n Launch Weasis as an external application (default value when NONE): WebviewerBaseUrl = weasis:/weasis-pacs-connector/viewer Launch Weasis as an Applet in the web browser (not recommended as several browsers block Java plugin) : WebviewerBaseUrl = weasis:/weasis-pacs-connector/viewer-applet\n Launching Weasis from jnlp protocol. The new way of launching Java Westart file (jnlp) will require an absolute URL:\n weasis:jnlp://YOUR-host:8080/weasis-pacs-connector/viewer weasis:jnlps://YOUR-host:8443/weasis-pacs-connector/viewer  From dcm4chee 2.18.3, it possible to reuse the default host name of dcm4chee:\n weasis:jnlp://${server.host}:8080/weasis-pacs-connector/viewer weasis:jnlps://${server.host}:8443/weasis-pacs-connector/viewer   Click the Apply Changes button\n  Configure Weasis (This step is optional if you just want to keep the default configuration. It is required when the AETitle DCM4CHEE has been changed) The default configuration is stored in two files inside weasis-pacs-connector.war. To override the default configuration:\n According to the version of weasis-pacs-connector:\n weasis-pacs-connector 4.x and 5.x: Download weasis-connector-default.properties and rename it weasis-pacs-connector.properties\n weasis-pacs-connector 6.x and superior: Download the current weasis-connector-default.properties and rename it weasis-pacs-connector.properties, and download dicom-dcm4chee.properties (configuration of the dcm4chee archive)\n  Copy the files into a folder in the classpath of the servlet container. In JBoss (inferior to version 7), the best location would typically be server/default/conf.\n Edit the configuration as needed. For example, dcm4chee may be running on a different computer than Weasis, or the AE Title of dcm4chee may have been changed.\nIf so, edit weasis-pacs-connector.properties or dicom-dcm4chee.properties for weasis-pacs-connector 6.x. Edit the properties: pacs.host, pacs.port, pacs.aet\u0026hellip;\n Optional: add new properties or arguments in the JNLP file, see configuration of weasis-pacs-connector\n  That\u0026rsquo;s all, now restart dcm4chee and launch Weasis from the dcm4chee-web3 portal.\n  For dcm4chee-web (old web interface - before 2.17.1)  Go here and download:\n The last Weasis version: weasis.war The Weasis internationalization (translation): weasis-i18n.war (optional) The modified dcm4chee web interface dcm4chee-web/version/dcm4chee-web.war) dcm4chee version: dcm4chee-web.war has been built only for some dcm4chee versions. For other versions see rebuild dcm4chee-web from any version.\n   Place these three files into the deploy folder (server/default/deploy/) of dcm4chee.\n Modify the permission in /dcm4jboss-web/src/etc/conf/dcm4chee-web/folder.permissions or in server/default/conf/dcm4chee-web if dcm4chee is already installed:\n folder.*=edit,move,delete,view,*export,edit.newStudyUID,mergepat,study_permission,study_permission.free_role_action,query_has_issuer folder.*export=export_tf,export_xds\n\u0026hellip;\nfolder=WebUser(send,view);DatacareUser(edit,move,delete,export_xds,view);WebAdmin(*)\n That\u0026rsquo;s all, now restart dcm4chee and launch Weasis from the web portal.\n  Write weasis-portable to DICOM CDs with dcm4chee-cdw  Install dcm4chee-cdw (see doc/INSTALL.txt in the archive) Extract weasis-portable.zip into the ../dcm4chee/server/default/data/mergedir directory Go to the dcm4che jmx console (dcm4chee.cdw):  Select the MediaCreationMgtSCP item and set to true the value of DefaultIncludeDisplayApplication Select the MakeIsoImage item and set to 4 the value of isoLevel  Click on the Apply Changes button Embedding a Java Runtime for Windows: The executable (viewer-win32.exe) allows to embed a JRE in the relative directory \u0026ldquo;jre/windows\u0026rdquo; (e.g. weasis-portable/jre/windows/bin/java.exe). To support 32 and 64-bit architecture, copy 32-bit Java Rutime from its installed directory.\nNote: the embedded Java Runtime is used only when no runtime is available on the system. When Java is run from CD, it could be a little slow.\n   "
},
{
	"uri": "https://nroduit.github.io/en/basics/customize/integration/",
	"title": "Integration",
	"tags": [],
	"description": "How connecting Weasis to a PACS, RIS, EMR or any web interface",
	"content": " How to launch Weasis from any environments There are two Weasis distributions: the WEB distribution (weasis.war) and the portable distribution (weasis-portable.zip). Here we are presenting how to connect the WEB distribution with any web application. This documentation is adapted for Weasis 2.5 and superior.\nThe easiest way to launch Weasis from a web context is to use weasis-pacs-connector.\nFor connecting to dcm4chee web interface, follow the instructions in Installing Weasis in DCM4CHEE.\nSee also the new way of launching Java Westart.\n Use weasis-pacs-connector Standard workflow when connecting Weasis to a PACS, RIS, EMR or any web interface: The schema above shows that the queries to the PACS are made at the same time the viewer starting.\n Workflow where the manifest is embedded in the jnlp file (synchrone processes): Build your own connector This method have two requirements:\n Building a jnlp file for launching Weasis Building a xml manifest to donwload images  Build a JNLP Build a Java Webstart file (.jnlp) for launching Weasis. This file has at least one dynamic parameter (\u0026lt;argument\u0026gt;$dicom:get ... \u0026lt;/argument\u0026gt;) to download images. Generally it is the xml file containing the UIDs.\n\u0026lt;?xml version=\u0026#34;1.0\u0026#34; encoding=\u0026#34;UTF-8\u0026#34;?\u0026gt; \u0026lt;!DOCTYPE jnlp PUBLIC \u0026#34;-//Sun Microsystems, Inc//DTD JNLP Descriptor 6.0//EN\u0026#34; \u0026#34;http://java.sun.com/dtd/JNLP-6.0.dtd\u0026#34;\u0026gt; \u0026lt;jnlp spec=\u0026#34;1.6+\u0026#34; codebase=\u0026#34;http://localhost:8080/weasis\u0026#34; href=\u0026#34;\u0026#34;\u0026gt; \u0026lt;information\u0026gt; \u0026lt;title\u0026gt;Weasis\u0026lt;/title\u0026gt; \u0026lt;vendor\u0026gt;Weasis Team\u0026lt;/vendor\u0026gt; \u0026lt;description\u0026gt;DICOM images viewer\u0026lt;/description\u0026gt; \u0026lt;description kind=\u0026#34;short\u0026#34;\u0026gt;An application to visualize and analyze DICOM images.\u0026lt;/description\u0026gt; \u0026lt;description kind=\u0026#34;one-line\u0026#34;\u0026gt;DICOM images viewer\u0026lt;/description\u0026gt; \u0026lt;description kind=\u0026#34;tooltip\u0026#34;\u0026gt;Weasis\u0026lt;/description\u0026gt; \u0026lt;/information\u0026gt; \u0026lt;security\u0026gt; \u0026lt;all-permissions /\u0026gt; \u0026lt;/security\u0026gt; \u0026lt;resources\u0026gt; \u0026lt;!-- Requires Java SE 8 for Weasis 2.5 and superior --\u0026gt; \u0026lt;java version=\u0026#34;9+\u0026#34; href=\u0026#34;http://java.sun.com/products/autodl/j2se\u0026#34; java-vm-args=\u0026#34;--add-modules java.xml.bind --add-exports=java.base/sun.net.www.protocol.http=ALL-UNNAMED --add-exports=java.base/sun.net.www.protocol.https=ALL-UNNAMED --add-exports=java.base/sun.net.www.protocol.file=ALL-UNNAMED --add-exports=java.base/sun.net.www.protocol.ftp=ALL-UNNAMED --add-exports=java.base/sun.net.www.protocol.jar=ALL-UNNAMED --add-exports=jdk.unsupported/sun.misc=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.security=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.desktop/javax.imageio.stream=ALL-UNNAMED --add-opens=java.desktop/javax.imageio=ALL-UNNAMED --add-opens=java.desktop/com.sun.awt=ALL-UNNAMED\u0026#34; initial-heap-size=\u0026#34;128m\u0026#34; max-heap-size=\u0026#34;768m\u0026#34; /\u0026gt; \u0026lt;java version=\u0026#34;9+\u0026#34; java-vm-args=\u0026#34;--add-modules java.xml.bind --add-exports=java.base/sun.net.www.protocol.http=ALL-UNNAMED --add-exports=java.base/sun.net.www.protocol.https=ALL-UNNAMED --add-exports=java.base/sun.net.www.protocol.file=ALL-UNNAMED --add-exports=java.base/sun.net.www.protocol.ftp=ALL-UNNAMED --add-exports=java.base/sun.net.www.protocol.jar=ALL-UNNAMED --add-exports=jdk.unsupported/sun.misc=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.security=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.desktop/javax.imageio.stream=ALL-UNNAMED --add-opens=java.desktop/javax.imageio=ALL-UNNAMED --add-opens=java.desktop/com.sun.awt=ALL-UNNAMED\u0026#34; initial-heap-size=\u0026#34;128m\u0026#34; max-heap-size=\u0026#34;768m\u0026#34; /\u0026gt; \u0026lt;j2se version=\u0026#34;1.8+\u0026#34; href=\u0026#34;http://java.sun.com/products/autodl/j2se\u0026#34; initial-heap-size=\u0026#34;128m\u0026#34; max-heap-size=\u0026#34;768m\u0026#34; /\u0026gt; \u0026lt;j2se version=\u0026#34;1.8+\u0026#34; initial-heap-size=\u0026#34;128m\u0026#34; max-heap-size=\u0026#34;768m\u0026#34; /\u0026gt; \u0026lt;jar href=\u0026#34;http://localhost:8080/weasis/weasis-launcher.jar\u0026#34; main=\u0026#34;true\u0026#34; /\u0026gt; \u0026lt;jar href=\u0026#34;http://localhost:8080/weasis/felix.jar\u0026#34; /\u0026gt; \u0026lt;!-- Optional library (Substance Look and feel, only since version 1.0.8). Requires the new Java Plug-in introduced in the Java SE 6 update 10 release.For previous JRE 6, substance.jnlp needs a static codebase URL --\u0026gt; \u0026lt;extension href=\u0026#34;http://localhost:8080/weasis/substance.jnlp\u0026#34; /\u0026gt; \u0026lt;!-- Allows to get files in pack200 compression, only since Weasis 1.1.2 --\u0026gt; \u0026lt;property name=\u0026#34;jnlp.packEnabled\u0026#34; value=\u0026#34;true\u0026#34; /\u0026gt; \u0026lt;!-- ================================================================================================================= --\u0026gt; \u0026lt;!-- Security Workaround. Add prefix \u0026#34;jnlp.weasis\u0026#34; for having a fully trusted application without signing jnlp (only since weasis 1.2.9), http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6653241 --\u0026gt; \u0026lt;!-- Required parameter. Define the location of config.properties (the OSGI configuration and the list of plug-ins to install/start) --\u0026gt; \u0026lt;property name=\u0026#34;jnlp.weasis.felix.config.properties\u0026#34; value=\u0026#34;http://localhost:8080/weasis/conf/config.properties\u0026#34; /\u0026gt; \u0026lt;!-- Optional parameter. Define the location of ext-config.properties (extend/override config.properties) --\u0026gt; \u0026lt;property name=\u0026#34;jnlp.weasis.felix.extended.config.properties\u0026#34; value=\u0026#34;http://localhost:8080/weasis-ext/conf/ext-config.properties\u0026#34; /\u0026gt; \u0026lt;!-- Required parameter. Define the code base of Weasis for the JNLP --\u0026gt; \u0026lt;property name=\u0026#34;jnlp.weasis.weasis.codebase.url\u0026#34; value=\u0026#34;http://localhost:8080/weasis\u0026#34; /\u0026gt; \u0026lt;!-- Optional parameter. Define the code base ext of Weasis for the JNLP --\u0026gt; \u0026lt;property name=\u0026#34;jnlp.weasis.weasis.codebase.ext.url\u0026#34; value=\u0026#34;http://localhost:8080/weasis-ext\u0026#34; /\u0026gt; \u0026lt;!-- Required parameter. OSGI console parameter --\u0026gt; \u0026lt;property name=\u0026#34;jnlp.weasis.gosh.args\u0026#34; value=\u0026#34;-sc telnetd -p 17179 start\u0026#34; /\u0026gt; \u0026lt;!-- Optional parameter. Allows to have the Weasis menu bar in the top bar on Mac OS X (works only with the native Aqua look and feel) --\u0026gt; \u0026lt;property name=\u0026#34;jnlp.weasis.apple.laf.useScreenMenuBar\u0026#34; value=\u0026#34;true\u0026#34; /\u0026gt; \u0026lt;!-- Optional parameter. Allows to get plug-ins translations --\u0026gt; \u0026lt;property name=\u0026#34;jnlp.weasis.weasis.i18n\u0026#34; value=\u0026#34;http://localhost:8080/weasis-i18n\u0026#34; /\u0026gt; \u0026lt;!-- Optional Weasis Documentation --\u0026gt; \u0026lt;!-- \u0026lt;property name=\u0026#34;jnlp.weasis.weasis.help.url\u0026#34; value=\u0026#34;${cdb}/../weasis-doc\u0026#34; /\u0026gt; --\u0026gt; \u0026lt;!-- ================================================================================================================= --\u0026gt; \u0026lt;/resources\u0026gt; \u0026lt;application-desc main-class=\u0026#34;org.weasis.launcher.WebstartLauncher\u0026#34;\u0026gt; \u0026lt;!-- Example for opening dicom files from remote xml file --\u0026gt; \u0026lt;argument\u0026gt;$dicom:get -w \u0026#34;http://localhost:8080/dcm4chee-web/wadoQueries/wado_query3888637380.xml.gz\u0026#34;\u0026lt;/argument\u0026gt; \u0026lt;!-- Example for opening dicom files from local foler --\u0026gt; \u0026lt;argument\u0026gt;$dicom:get -l \u0026#34;/home/Images/MRIX LUMBAR/\u0026#34;\u0026lt;/argument\u0026gt; \u0026lt;!-- Example for opening dicom files by embedding the xml file encoded in gzip and then in base64, it must be in one line without space at the beginning --\u0026gt; \u0026lt;argument\u0026gt;$dicom:get -i \u0026#34;H4sIAAAAAAAAALVV7Y+aMBz+vr+i6XdLXwDBHHdxpy4mvgX0dvtkOqnaBOGO1qn//RUQnW5uy3JHCC2/1+d5Wsrdw36TgB8iVzJLA0gQhkCkiyyW6SqAW71seBA83H+62/E4m79uR...\u0026#34;\u0026lt;/argument\u0026gt; \u0026lt;!-- Example for opening dicom files from URLs --\u0026gt; \u0026lt;argument\u0026gt;$dicom:get -r \u0026#34;http://server/images/img1.dcm http://server/images/img2.dcm\u0026#34;\u0026lt;/argument\u0026gt; \u0026lt;/application-desc\u0026gt; \u0026lt;/jnlp\u0026gt; Replace http://localhost:8080/weasis by your server location and \u0026lt;argument\u0026gt;...\u0026lt;/argument\u0026gt; by your data to load. Adapt other parameters if necessary.\n weasis-pacs-connector services are based on jnlp templates and they allow either to build a manifest from a PACS via DICOM C-Find or to upload the manifest by http POST.\n Build an XML manifest Build an XML file containing the UIDs of the images which will be retrieved from Weasis. There is XLS to validate the content of xml. This file can be either compressed in gzip or uncompressed. Here is an example (required Weasis 2.5 and superior):\n\u0026lt;?xml version=\u0026#34;1.0\u0026#34; encoding=\u0026#34;UTF-8\u0026#34; ?\u0026gt; \u0026lt;manifest xmlns=\u0026#34;http://www.weasis.org/xsd/2.5\u0026#34; xmlns:xsi=\u0026#34;http://www.w3.org/2001/XMLSchema-instance\u0026#34;\u0026gt; \u0026lt;arcQuery additionnalParameters=\u0026#34;\u0026#34; arcId=\u0026#34;1001\u0026#34; baseUrl=\u0026#34;http://archive-weasis.rhcloud.com/archive/wado\u0026#34; requireOnlySOPInstanceUID=\u0026#34;false\u0026#34;\u0026gt; \u0026lt;Patient PatientID=\u0026#34;H13885_9M\u0026#34; PatientName=\u0026#34;TEST NON SQUARE PIXELS\u0026#34; PatientSex=\u0026#34;F\u0026#34;\u0026gt; \u0026lt;Study AccessionNumber=\u0026#34;\u0026#34; ReferringPhysicianName=\u0026#34;\u0026#34; StudyDate=\u0026#34;20130711\u0026#34; StudyDescription=\u0026#34;TEST NON SQUARE PIXELS\u0026#34; StudyID=\u0026#34;PKD\u0026#34; StudyInstanceUID=\u0026#34;2.16.756.5.5.100.397184556.14391.1373576413.1508\u0026#34; StudyTime=\u0026#34;170013\u0026#34;\u0026gt; \u0026lt;Series Modality=\u0026#34;US\u0026#34; SeriesDescription=\u0026#34;NON SQUARE PIXELS: PIXEL ASPECT RATIO\u0026#34; SeriesInstanceUID=\u0026#34;1.2.40.0.13.1.1.87878503032592846377547034671833520632\u0026#34; SeriesNumber=\u0026#34;2\u0026#34;\u0026gt; \u0026lt;Instance InstanceNumber=\u0026#34;107\u0026#34; SOPInstanceUID=\u0026#34;1.2.40.0.13.1.1.126082073005720329436273995268222863740\u0026#34;/\u0026gt; \u0026lt;/Series\u0026gt; \u0026lt;Series Modality=\u0026#34;MR\u0026#34; SeriesDescription=\u0026#34;NON SQUARE PIXELS: PIXEL SPACING\u0026#34; SeriesInstanceUID=\u0026#34;2.16.756.5.5.100.397184556.7220.1373578035.1\u0026#34; SeriesNumber=\u0026#34;40001\u0026#34;\u0026gt; \u0026lt;Instance InstanceNumber=\u0026#34;1\u0026#34; SOPInstanceUID=\u0026#34;2.16.756.5.5.100.397184556.7220.1373578035.1.0\u0026#34;/\u0026gt; \u0026lt;Instance InstanceNumber=\u0026#34;2\u0026#34; SOPInstanceUID=\u0026#34;2.16.756.5.5.100.397184556.7220.1373578035.1.1\u0026#34;/\u0026gt; \u0026lt;Instance InstanceNumber=\u0026#34;3\u0026#34; SOPInstanceUID=\u0026#34;2.16.756.5.5.100.397184556.7220.1373578035.1.2\u0026#34;/\u0026gt; \u0026lt;Instance InstanceNumber=\u0026#34;4\u0026#34; SOPInstanceUID=\u0026#34;2.16.756.5.5.100.397184556.7220.1373578035.1.3\u0026#34;/\u0026gt; \u0026lt;/Series\u0026gt; \u0026lt;Series Modality=\u0026#34;MR\u0026#34; SeriesDescription=\u0026#34;NON SQUARE PIXELS: PIXEL SPACING\u0026#34; SeriesInstanceUID=\u0026#34;2.16.756.5.5.100.397184556.7220.1373578664.2\u0026#34; SeriesNumber=\u0026#34;50001\u0026#34;\u0026gt; \u0026lt;Instance InstanceNumber=\u0026#34;1\u0026#34; SOPInstanceUID=\u0026#34;2.16.756.5.5.100.397184556.7220.1373578664.2.0\u0026#34;/\u0026gt; \u0026lt;Instance InstanceNumber=\u0026#34;2\u0026#34; SOPInstanceUID=\u0026#34;2.16.756.5.5.100.397184556.7220.1373578664.2.1\u0026#34;/\u0026gt; \u0026lt;Instance InstanceNumber=\u0026#34;3\u0026#34; SOPInstanceUID=\u0026#34;2.16.756.5.5.100.397184556.7220.1373578664.2.2\u0026#34;/\u0026gt; \u0026lt;Instance InstanceNumber=\u0026#34;4\u0026#34; SOPInstanceUID=\u0026#34;2.16.756.5.5.100.397184556.7220.1373578664.2.3\u0026#34;/\u0026gt; \u0026lt;/Series\u0026gt; \u0026lt;/Study\u0026gt; \u0026lt;/Patient\u0026gt; \u0026lt;/arcQuery\u0026gt; \u0026lt;/manifest\u0026gt; Important Parameters (except mandatory parameters):\n PatientBirthDate helps to identify a patient. StudyDate, StudyTime, Modality, SeriesNumber and InstanceNumber help to sort data before downloading images. SeriesDescription and StudyDescription allow to immediately display the descriptions before downloading the images.   From Weasis 2.5 it is possible to have multiple archives (allows to have several arcQuery tags) and the presentations tag which contains the image annotations.\n Build an XML manifest (no WADO server) This example requires only a WEB server and Weasis 2.5 and superior. Weasis will download files by URLs.\n\u0026lt;?xml version=\u0026#34;1.0\u0026#34; encoding=\u0026#34;utf-8\u0026#34; ?\u0026gt; \u0026lt;manifest xmlns=\u0026#34;http://www.weasis.org/xsd/2.5\u0026#34; xmlns:xsi=\u0026#34;http://www.w3.org/2001/XMLSchema-instance\u0026#34;\u0026gt; \u0026lt;arcQuery additionnalParameters=\u0026#34;\u0026#34; arcId=\u0026#34;1001\u0026#34; baseUrl=\u0026#34;http://archive-weasis.rhcloud.com/archive/wado\u0026#34; requireOnlySOPInstanceUID=\u0026#34;false\u0026#34;\u0026gt; \u0026lt;Patient PatientBirthDate=\u0026#34;20010901\u0026#34; PatientID=\u0026#34;017589\u0026#34; PatientName=\u0026#34;Validate WADAKOKOA\u0026#34;\u0026gt; \u0026lt;Study StudyDate=\u0026#34;20100421\u0026#34; StudyDescription=\u0026#34;胸部立位 Ｖ→Ｄ犬4\u0026#34; StudyInstanceUID=\u0026#34;1.2.392.200036.9107.500.11141010042100073\u0026#34; StudyTime=\u0026#34;113836\u0026#34;\u0026gt; \u0026lt;Series DirectDownloadThumbnail=\u0026#34;thumb_4563173729424544.jpg\u0026#34; Modality=\u0026#34;CR\u0026#34; SeriesDescription=\u0026#34;Ｖ→Ｄ犬4\u0026#34; SeriesInstanceUID=\u0026#34;1.2.392.200036.9107.500.305.1410.141010042100073.121\u0026#34; SeriesNumber=\u0026#34;1\u0026#34;\u0026gt; \u0026lt;Instance DirectDownloadFile=\u0026#34;image_4563173729424543.dcm\u0026#34; InstanceNumber=\u0026#34;1\u0026#34; SOPInstanceUID=\u0026#34;1.2.392.200036.9107.500.305.1410.20100421.114831.109.101410\u0026#34;/\u0026gt; \u0026lt;Instance DirectDownloadFile=\u0026#34;image_4563173729424544.dcm\u0026#34; InstanceNumber=\u0026#34;2\u0026#34; SOPInstanceUID=\u0026#34;1.2.392.200036.9107.500.305.1410.20100421.114828.234.101410\u0026#34;/\u0026gt; \u0026lt;Instance DirectDownloadFile=\u0026#34;image_4563173729424545.dcm\u0026#34; InstanceNumber=\u0026#34;3\u0026#34; SOPInstanceUID=\u0026#34;1.2.392.200036.9107.500.305.1410.20100421.114823.421.101410\u0026#34;/\u0026gt; \u0026lt;/Series\u0026gt; \u0026lt;/Study\u0026gt; \u0026lt;/Patient\u0026gt; \u0026lt;/arcQuery\u0026gt; \u0026lt;/manifest\u0026gt; Important Parameters:\n DirectDownloadFile defines the URL of the DICOM file to download (the final URL is the combination of wadoURL + DirectDownloadFile) DirectDownloadThumbnail defines the URL of the JPEG file representing the series (the final URL is the combination of wadoURL + DirectDownloadThumbnail) The same ones as above.   "
},
{
	"uri": "https://nroduit.github.io/en/basics/architecture/",
	"title": "Weasis Architecture",
	"tags": [],
	"description": "Modular architecture of Weasis",
	"content": "Weasis has a modular architecture based on OSGi: the dynamic module system for Java. It uses the Apache Felix OSGi framework which is an open source implementation of the OSGi Release 4.2 specification (OSGi Certified).\nThe following schemas show the main different plug-in types (bundle in OSGi language) and their relationships. Viewer, Viewer Tool Pane, Tool Bar, Data Explorer and Codec bundles are registered dynamically by the Declarative Services (a way to push or to consume services in OSGi environment).\nFor each bundle, translation files are packaging in a separated bundle ending by “i18n” called a bundle fragment (OSGI concept) which is merged during runtime to the application. In this way, translation can be handled separately and they are automatically loaded by the application when they are available.\nSome Codec bundles also have bundle fragments. Those fragments contain native libraries (JNI wrapping). The Weasis launcher enables downloading and loading only the native binaries related to the running platform.\n"
},
{
	"uri": "https://nroduit.github.io/en/basics/customize/preferences/",
	"title": "Preferences",
	"tags": [],
	"description": "Manage the Weasis preferences",
	"content": " The WEB distribution (weasis.war) allows to deliver preferences from the server side to the client side. Some preferences on the server side are used by Weasis only during the first launch, because they can be changed lately in the Weasis user interface. The other preferences at server side are used by Weasis at every launch.\nLocal preferences can be modified:\n in the Weasis user interface: File \u0026gt; Preferences in files stored in ${user.home}/.weasis/preferences/ (not recommended)  Preferences on the server side can be modified:\n in the jnlp file (see how to configure weasis-jnlp.xml at Installing Weasis in DCM4CHEE) in ext-config.properties which extends (override) the configuration of config.properties. Files are located in the /weasis/conf directory of weasis.war and in Osirix web server: ~/Library/Application Support/OsiriX/weasis-ext-config.properties.  How to modify ext-config.properties:\n Unzip weasis.war, modify the file and zip it again. It is also possible to change the default location of ext-config.properties with the Java property \u0026ldquo;felix.extended.config.properties\u0026rdquo; either in JNLP file or in the Java VM argument. The ext-config.properties file can also be placed in a plugin package, see How to build and install a plug-in.   Priority order for loading a property Here is the priority order to set a property:\n Java System property (can be passed as arguments to Java Runtime either by VM arguments or in jnlp with Java Web Start) Property defined in weasis/conf/ext-config.properties or in weasis/conf/config.properties Default value of the property (see table below)  Example to change language property (It will work only during the first launch of Weasis on a user session, otherwise delete ${user.home}/.weasis/preferences/).\n If you are using weasis-pacs-connector, add in weasis-jnlp.xml the property with the prefix \u0026ldquo;jnlp.weasis.\u0026rdquo; (properties starting by \u0026ldquo;jnlp.\u0026rdquo; are required when jnlp is not signed):\n\u0026lt;property name=\u0026#34;jnlp.weasis.locale.lang.code\u0026#34; value=\u0026#34;fr_CH\u0026#34; /\u0026gt; Add the property in weasis/conf/ext-config.properties:\nlocale.lang.code=fr_CH The default value is \u0026ldquo;en_US\u0026rdquo;\n  List of preferences  GUI: if yes, the property can be modified in the Weasis user interface. Type: F: only caught at the first launch of the viewer. A: always caught by the to the viewer.      Property Default value GUI Type Description     weasis.language en yes F Language code defined by ISO 639. Replaced by locale.lang.code in Weasis 2   weasis.country US yes F Country or region code defined by ISO 3166. Replaced by locale.lang.code in Weasis 2   weasis.variant  yes F Optional variant code. Replaced by locale.lang.code in Weasis 2   weasis.confirm.closing false (from 2.0.0) yes F Show a message of confirmation when closing the application.   weasis.look SubstanceTwilight AquaLookAndFeel (Mac) yes F Look and feel, if the Substance library is not loaded, Nimbus will be used by default.   weasis.look.${system} SubstanceTwilight AquaLookAndFeel (Mac) yes F Look and feel, specific to the platform (macosx, linux, windows).   weasis.show.disclaimer true no A Show a disclaimer (requires to be accepted to start the application) during the first launch of Weasis.   weasis.show.release true (from 2.0.0) no A Show a message when the release has changed   weasis.export.dicom true (from 1.2.5) no A Allows exporting DICOM files.   weasis.portable.dicom.cache true no A Cache the images imported from directories defined in weasis.portable.dicom.directory. If true, it is similar to the WEB import.   org.apache.sling.commons.log.level INFO yes F Sets the logging level of the loggers. This may be any of the defined logging levels TRACE, DEBUG, INFO, WARN, ERROR.   org.apache.sling.commons.log.file.activate false yes F Activate the log file. If this property is false, log messages are written to System.out. Since Weasis 2.0.4   org.apache.sling.commons.log.file.number 5 yes F The number of rotated files to keep.   org.apache.sling.commons.log.file.size 10MB yes F Defines how the log file is rotated by size.   org.apache.sling.commons.log.pattern {0,date,dd.MM.yyyy HH:mm:ss.SSS} *{4}* [{2}] {3} {5} no F Formatting log messages. java.util.MessageFormat pattern supporting up to six arguments: {0} The timestamp of type java.util.Date, {1} the log marker, {2} the name of the current thread, {3} the name of the logger, {4} the debug level and {5} the actual debug message.   ONLY from Weasis 2.0       locale.lang.code en yes F Language code (see Java Locale). If value is \u0026ldquo;system\u0026rdquo; then the locale of the operating system will be used (client-side).   locale.format.code system yes F Format code for number and date (see Java Locale). If value is \u0026ldquo;system\u0026rdquo; then the locale of the operating system will be used (client-side).   weasis.name Weasis no A Change the name of the application everywhere in UI   weasis.profile default no A Application profile, it allows having a custom preferences directory on the client side (will not shared preferences with other Weasis instances)   weasis.resources.url ${weasis.codebase.url}/resources.zip no A Application resource files (logo, presets, LUTs\u0026hellip;). \u0026ldquo;resources.zip\u0026rdquo; is downloaded again only when the last modified date has changed.   weasis.download.immediately true yes F Start to download series immediately   download.concurrent.series 3 no A The number of concurrent series downloads   download.concurrent.series.images 4 no A The number of concurrent image downloads in a series   audit.log false no A Audit log for giving statistics about usage of Weasis   weasis.color.wl.apply true yes F Allow to apply Window/Level on color images   weasis.dicom.root.uid 2.25 no A Set value for dicom root UID when creating DICOM objects (KO or PR). See company list.   {ui keys} true no A Make visible or not the Toolbars, Tools, some buttons, main menu and context menu items (see ext-config.properties file)   weasis.aet WEASIS_AE no A Calling AETitle for DICOM send and DICOM print   ONLY from Weasis 2.5.3       org.apache.sling.commons.log.stack.limit 3 yes F Defines the maximum number of lines for stack trace (0 =\u0026gt; NONE, -1 =\u0026gt; ALL)   weasis.export.dicom.send true no A Allows DICOM send. Is always false when weasis.export.dicom=false.   weasis.import.dicom true no A Allows importing DICOMs   weasis.import.dicom.qr true no A Allows DICOM Q/R. Is always false when weasis.import.dicom=false.   weasis.acquire.meta.global.display PatientID,PatientName, PatientBirthDate, PatientSex, AccessionNumber, StudyDescription no A Global tags at the patient or study level that are visible in Dicomizer   weasis.acquire.meta.global.edit StudyDescription no A Global tags which are editable   weasis.acquire.meta.global.required PatientID, PatientName, AccessionNumber, StudyDescription no A Global tags which are required for publication   weasis.acquire.meta.series.display Modality, OperatorsName, ReferringPhysicianName, BodyPartExamined, SeriesDescription no A Tags at the series level that are visible in Dicomizer   weasis.acquire.meta.series.edit ReferringPhysicianName, BodyPartExamined, SeriesDescription no A Series tags which are editable   weasis.acquire.meta.series.required Modality, SeriesDescription no A Series tags which are required for publication   weasis.acquire.meta.image.display ImageComments, ContentDate, ContentTime no A Tags at the image level that are visible in Dicomizer   weasis.acquire.meta.image.edit ImageComments, ContentDate, ContentTime no A Image tags which are editable   weasis.acquire.meta.image.required ContentDate no A Image tags which are required for publication   weasis.acquire.dest.host localhost no A Host name of DICOM send destination for Dicomizer. If no value, the list of DICOM nodes for storage is displayed.   weasis.acquire.dest.aet DCM4CHEE no A AETitle of DICOM send destination for Dicomizer   weasis.acquire.dest.port 11112 no A Port of DICOM send destination for Dicomizer   weasis.acquire.meta.study.description Pictures of follow-up,Pictures of observation,Pictures preoperative,Pictures intraoperative,Pictures postoperative no A Comma-separated list of study description elements. Comment this property to have a free text field.   weasis.acquire.meta.series.description  no A Comma-separated list of series description elements. Comment this property to have a free text field.   ONLY from Weasis 2.6.0       weasis.level.inverse true yes F Inverse level direction (moving the cursor down to increase brightness)   weasis.apply.latest.pr false yes F Apply by default the most recent Presentation State to the related image     Preferences of the portable distribution (weasis-portable.zip)\n ext-config.properties is located in weasis/conf file resources are located in weasis/resources   Examples of properties in ext-config.properties Changing the default Look and feel\n# Define the Look an Feel for the first launch according to the platform (macosx, linux, windows) weasis.look=org.pushingpixels.substance.api.skin.SubstanceSaharaLookAndFeel weasis.look.macosx=com.apple.laf.AquaLookAndFeel weasis.look.linux=org.pushingpixels.substance.api.skin.SubstanceGraphiteAquaLookAndFeel Customize resources The resources are located:\n in web distribution: in \u0026rdquo;resources.zip\u0026rdquo; at root of weasis.war (see above how to set a new URL for resources) in portable distribution: in ./weasis/resources  How to add DICOM node or DICOM printers configuration at the server side (only from Weasis 2.5.0)  From the graphical user interface, configure the DICOM printers (File \u0026gt; Print \u0026gt; DICOM Print) or DICOM nodes (File \u0026gt; Preferences \u0026gt; Dicom node list) Go to he folder ${user.home}/.weasis/data/weasis-dicom-explorer Copy the desired configuration files: dicomNodes.xml, dicomPrinterNodes.xml, dicomWebNodes.xml and dicomCallingNodes.xml Paste at the root path of ressources. For web distribution, unzip, place files and zip again. The new configurations should appears for all the users as non editable configurations.  "
},
{
	"uri": "https://nroduit.github.io/en/basics/shortcuts/",
	"title": "Shortcuts",
	"tags": [],
	"description": "Keyboard and Mouse Shortcuts of Weasis",
	"content": " Keyboard and Mouse Shortcuts  IHE recommendations in Basic Image Review profile.\nSelected view of the 2D DICOM Viewer    Shortcut Action     T Translate (pan) the image canvas    W Window / Level    S Series scroll    Z Zoom    R Rotation   C Cine Start / Stop   M Measure   D Distance measurement    A Angle measurement    Y Polyline measurement   B Text box   Q Context menu   Ctrl + Spacebar Change to the next action   Ctrl + mouse drag Accelerate the current action    Ctrl + Shift + mouse drag Accelerate more the current action   0 1 2 3\u0026hellip; DICOM presets   K Toggle key image state   Spacebar Show/Hide all the annotations (three states)   I Show/Hide all the annotations (three states)    Escape Reset the selected view    P Print view(s) with the operating system printer    Right click Open the contextual menu for more options   Double click Toggle fullscreen   Drag files/directories\n(from the OS file manager) Open DICOMs files    DICOM explorer    Shortcut Action     Ctrl + click on the thumbnail Select multiple series   Click on a thumbnail and then Shift + click on another one Select all series between   Enter Open the selected series in the default viewer   Click + drag a thumbnail in the main view Display a series   Right click Open the contextual menu for more options    Downloading Priorities: Selecting a thumbnail give it the best priority to download.\n Graphics    Shortcut Action     Click on a graphic Select a Graphics   Click + mouse drag In selection mode: select all the graphics inside the selection area.\nIn drawing mode: draw the selected graphic shape.   Ctrl + A Select all the graphics   Ctrl + D Deselect all the graphics   Delete Delete the selected graphics   Shift + click on a graphic In selection mode: add or remove a graphic to the current selection.\nIn drawing mode: force to draw on another graphic (without shift the graphic is selected).   Double click Stop adding points for polyline (also available in the context menu)   Right click Open the contextual menu for more options    Tips and Tricks Window / Level: \n Horizontal movement of the mouse to the right will widen the window width (flatten the perceived contrast) Vertical movement of the mouse upwards will lower the window center (increase the perceived brightness)  Two ways to draw a segment:\n Click + drag \u0026gt; release Click \u0026gt; release \u0026gt; drag \u0026gt; release  "
},
{
	"uri": "https://nroduit.github.io/en/tutorials/",
	"title": "Tutorials",
	"tags": [],
	"description": "",
	"content": "  Build KO and PR  How to build and export DICOM Key Object Selection and Presentation State (GSPS)\n   Spatial Calibration  How to change the spatial calibration of an image or a series\n   Styles and themes  How to apply another sytle and theme\n   Translation  How to change the language and regional setings\n   Weasis Multi-Touch  Redesigned user interface with JavaFX and multi-touch support\n   "
},
{
	"uri": "https://nroduit.github.io/en/tutorials/build-ko-pr/",
	"title": "Build KO and PR",
	"tags": [],
	"description": "How to build and export DICOM Key Object Selection and Presentation State (GSPS)",
	"content": " How to build and export DICOM KO and PR Key Object Selection (KO)  To display KO Toolbar, select in menu: View \u0026gt; Toolbars \u0026gt; Key Object Selection Toolbar Click on the right icon over the image to select the Key Object Selection. Click on the star icon (or press \u0026lsquo;k\u0026rsquo;) to create in a new KO or to add the key image.\n  Presentation State (PR or GSPS)  Open PR: Since Weasis 2.6.0 PRs are not applied to the image by default (requires to select the right icon over the image). To apply the most recent PR by default, change it in the preferences. Create PR : Any type of annotations can be exported in DICOM Presentation State. Image presentation (zoom, W/L, LUT\u0026hellip;) will be exported in a futur version.\n  Exporting Key Object Selection or Presentation State  To export KO or PR, select in menu: File \u0026gt; Export \u0026gt; DICOM  Locally  Remotely    "
},
{
	"uri": "https://nroduit.github.io/en/basics/customize/build-plugins/",
	"title": "Build Plug-ins",
	"tags": [],
	"description": "How to build new Weasis plug-ins and how they can be incorporated to the distributions",
	"content": " How to build and install a plug-in This page describes how to build new Weasis plug-ins and how they can be incorporated to the distributions, see also this page for the IDE configuration.\nList of plug-ins types  Media viewer or editor (main central panel that implements ViewerPlugin or ImageViewerPlugin and the factory implements SeriesViewerFactory) Toolbar associated to a viewer (implements Toolbar) Tool associated to a viewer (right panel that implements DockableTool) Data explorer (data model implements DataExplorerModel and data view implements DataExplorerView, and the factory implements DataExplorerViewFactory) Import data into an explorer (ex. ImportDicom and the factory implements DicomImportFactory) Export data into an explorer (ex. ExportDicom and the factory implements DicomExportFactory) DICOM editor or viewer for special modalities (DicomSpecialElementFactory and SeriesViewerFactory), see weasis-dicom-sr Media codec (implements Codec) Perferences (implements PreferencesPageFactory) UI aggregator. This is the application main user interface bundle. The maven artifact of this bundle must be defined in config.properties (ex. weasis.main.ui=weasis-base-ui)  See the Weasis Architecture to understand the plug-in hierarchy.\n Build plug-ins from Maven archetype  From the root directory of an archetype execute: mvn install Generate a sample project by executing the following command: mvn archetype:generate -DarchetypeCatalog=local Select the archetype:  weasis-plugin-base-viewer-archetype (example of a toolbar and a tool for the non DICOM viewer) weasis-plugin-dicom-viewer-archetype (example of a toolbar and a tool for the DICOM viewer)   From Eclipse: File \u0026gt; New \u0026gt; Maven Project and Search for weasis archetype in catalog filter.\n Install plug-ins For weasis-portable distribution The file \u0026ldquo;/weasis/conf/ext-config.properties\u0026rdquo; must be adapted and plug-ins must be placed in the directory \u0026ldquo;/weasis/plugins\u0026rdquo;.\nExample with weasis-isowriter:\n Add in /weasis/conf/ext-config.properties:\nfelix.auto.start.85=${weasis.codebase.url}/plugins/weasis-isowriter-2.6.1.jar For not modifying the current ext-config.properties create a new file and add to the launcher the following VM argument: -Dfelix.extended.config.properties=\u0026quot;file:///your_plugin_path/myplugin-config.properties\u0026quot;\n  Place the file \u0026ldquo;weasis-isowriter-2.6.1.jar\u0026rdquo; in the directory \u0026ldquo;/weasis/plugins\u0026rdquo;\n  For the WEB distribution Build a new war file containing the plug-ins and the ext-config.properties file.\n Build \u0026ldquo;weasis-ext.war\u0026rdquo; with the following structure:\nweasis-ext/ ├── conf/ │ ├── ext-config.properties ├── WEB-INF/ │ ├── web.xml ├── plugin1.jar └── plugin2.jar  In /weasis-ext/conf/ext-config.properties, add the plug-ins references:\nfelix.auto.start.85= \\  ${weasis.codebase.ext.url}/plugin1.jar \\  ${weasis.codebase.ext.url}/plugin2.jar Using ${weasis.codebase.ext.url} allows to keep the base URL abstract, so moving the package to another server won’t be a problem. Otherwise absolute URLs must be used. The default value of ${weasis.codebase.ext.url} is ${weasis.codebase.url}-ext.\n  weasis-ext is the default web context when launching Weasis, using another web context requires to modify the property weasis.ext.url, it can be done by:\n changin the property in jnlp template in weasis-pacs-connector configuration.  weasis.ext.url=${server.base.url}/weasis-newext It is aslo possible to add the code base for plugins (cdb-ext) directly in the URL: http://localhost:8080/weasis-pacs-connector/viewer?patientID=9702672\u0026amp;cdb-ext=http://localhost:8080/plugins/weasis-ext\n   For debugging a specific configuration: add to the launcher the following VM argument: -Dfelix.extended.config.properties=\u0026quot;http://server:port/weasis-ext/conf/ext-config.properties\n Example that make a package of weasis-isowriter plugin:\n Build \u0026ldquo;weasis-ext.war\u0026rdquo;:\nweasis-ext/ ├── conf/ │ ├── ext-config.properties ├── WEB-INF/ │ ├── web.xml └── weasis-isowriter-2.0.3.jar   Build OSGI services All the plug-in type described in the list above are OSGI services that are registered and aggregated in the GUI. Building the plug-in from the Maven archetype will configure automatically the OSGI service. For adding new OSGI services, here is the procedure:\n Create a class implementing one of the plug-in type and add at least the annotations @Component and @Service, for instance: ﻿\n@Component(immediate = false) @Service public class SamplePrefFactory implements PreferencesPageFactory { ﻿... } For more information about annotations see the Apache Felix SCR Annotations.\n  Add in pom.xml of the plug-in the maven-scr-plugin (to generate xml file from the Java annotations) and the property for loading any xml file in maven-bundle-plugin: ﻿\n\u0026lt;build\u0026gt; \u0026lt;plugins\u0026gt; \u0026lt;plugin\u0026gt; \u0026lt;groupId\u0026gt;org.apache.felix\u0026lt;/groupId\u0026gt; \u0026lt;artifactId\u0026gt;maven-scr-plugin\u0026lt;/artifactId\u0026gt; \u0026lt;/plugin\u0026gt; \u0026lt;plugin\u0026gt; \u0026lt;groupId\u0026gt;org.apache.felix\u0026lt;/groupId\u0026gt; \u0026lt;artifactId\u0026gt;maven-bundle-plugin\u0026lt;/artifactId\u0026gt; \u0026lt;/plugin\u0026gt; ...  "
},
{
	"uri": "https://nroduit.github.io/en/getting-started/building-weasis/",
	"title": "Building Weasis",
	"tags": [],
	"description": "How to build Weasis from sources",
	"content": " These instructions describe how to build Weasis directly from the Git repository on any platform. For building Weasis from an IDE, see Weasis plug-in development guidelines.\nPrerequisites\n JDK 8 or higher Maven 3 or higher\nIf your computer is behind a proxy server, configure maven. Git or directly download source from github  Getting the Source To clone the repository, first install GIT and either clone using a graphical GIT client or directly from the command line using the command:\n$ git clone https://github.com/nroduit/Weasis.git The trunk is not a stable version and snapshot version is not retained in cache for the web distribution (it means the files will be every times downloaded)\n Check out a tag version to build a stable version, see tag list.\n$ git checkout \u0026lt;TAG_NAME\u0026gt; Building all Plug-ins  Go in the Weasis directory, compile and install all the plug-ins in the local Maven repository $ mvn clean install  Building Weasis Distributions  Requires to install all the plug-ins in the local Maven repository as described in the item above. $ cd weasis-distributions $ mvn clean package -Dportable=true -P pack200 -P pack200: From 1.1.2 it is possible to use the compression pack200 that reduces jar size considerably. It is recommended to use the Oracle jdk with this option (openjdk can throw packging errors).\n-Dportable=true: option for building the portable distribution (multi-platform standlone launchers)\n For the WEB distribution using Java Webstart, it is required to sign jar files with your own certificate (by replacing values in the command below by your own values). A trust-worthy certificate from a certificate authority is now required to run Java Web Start applications. A self signed certificate generate by keytool will always display a security warning message.\n The parameters must be placed in the maven user setting or has to be the options in the Maven command: $ mvn clean package -Djarsigner.alias=\u0026#34;your_alias\u0026#34; -Djarsigner.storepass=\u0026#34;your_pwd\u0026#34; -Djarsigner.keystore=\u0026#34;your_path/keystore\u0026#34; -Dportable=true -P pack200   Options for building the portable distribution.\n By default the executable on Windows runs only a single instance (from Weasis 2.0). To disable single instance in portable version, set windowsName property empty. $ mvn clean package -Dportable=true -DwindowsName= On 64-bit system, it requires to install the 32-bit compatibility libraries to build the windows executable. On Linux you need to install ia32-libs package. Do not place the sources in a path that contains directories with blanks or national characters, the compilation of the win32 executable can fail.\n   The distribution files are located in:\n target/web-dist/ target/portable-dist/   "
},
{
	"uri": "https://nroduit.github.io/en/basics/customize/",
	"title": "Customize",
	"tags": [],
	"description": "",
	"content": "  Integration     Preferences     Build Plug-ins     Rebuild dcm4chee-web     "
},
{
	"uri": "https://nroduit.github.io/en/getting-started/guidelines/",
	"title": "Guidelines",
	"tags": [],
	"description": "Guidelines for Weasis plug-in development",
	"content": " Weasis Plug-in Development This page is intended for developers who want to contribute to Weasis and it is a recommendation for developers who want to create their own plug-ins, see also How to build and install a plug-in.\nWe highly recommend the use of Eclipse IDE, because all the following instructions are based on it and some settings and the coding conventions can be imported directly into Eclipse. Nevertheless to have a better Maven integration, it is possible to use IntelliJ IDEA or Netbeans by configuring weasis-launcher with similar instructions described in Debug or Run from Eclipse.\nPrerequisites  JDK 8 or higher Recent version of Eclipse IDE  Install Java and Eclipse  JDK 8 or higher (Oracle JDK is recommended for Linux) JRE is not suitable for m2eclipse.\n  Eclipse IDE for Java Developers (at least 4.2.2)  Configure Eclipse  You can edit the VM options of the eclipse.ini file in your eclipse folder. For instance the maximum memory for the JVM or the JVM location can be specified. Start Eclipse and select the path of the Weasis workspace It is recommended to create a new Workspace for keeping a specific Weasis configuration.\n  Go to Window \u0026gt; Preferences \u0026gt; Java \u0026gt; Installed JREs \u0026gt; Execution Environments and select the installed JDK for JavaSE-1.8 In Window \u0026gt; Preferences \u0026gt; General \u0026gt; Workspace  Select UTF-8 for Text file encoding Select Unix for New text file line delimiter   Code style and convention Weasis adheres to the Java Language Specification. Here are some code style specifications:\n Maximum line length is 120 characters. Use spaces instead of tabs. Indendation size is 4 spaces. Do not insert a new line before opening brace. Insert a new line before closing brace. Use fully qualified import statements, i.e. do not use asterisks.  Code style specifications can be imported into Eclipse:\n Download the Weasis code style format In Window \u0026gt; Preferences \u0026gt; Java \u0026gt; Code Style \u0026gt; Formatter, click on Import and select the weasis-eclipse-formatting.xml file Press OK after importing   Download the Weasis clean up code style In Window \u0026gt; Preferences \u0026gt; Java \u0026gt; Code Style \u0026gt; Clean Up , click on Import and select the weasis-eclipse-cleanup.xml file Press OK after importing   Download the Weasis code template In Window \u0026gt; Preferences \u0026gt; Java \u0026gt; Code Style \u0026gt; Code Templates , click on Import and select the weasis-code-style-template.xml file Press OK after importing  Getting the source and building Weasis from Eclipse  Getting the Source  For external Git client, see Building Weasis. From Eclipse Git perspective: Window \u0026gt; Open Perspective \u0026gt; GIT Repository Exploring. Click on button \u0026ldquo;Clone a GIT repository\u0026rdquo;. In the New dialog, Add one of the following URIs:  https://github.com/nroduit/Weasis.git (public repository) https://weasis.repositoryhosting.com/git/weasis/weasis-dev.git (private repository for developers, enter your login)  Press, Next and then Finnish From Eclipse menu, open File \u0026gt; Import\u0026hellip; In the New dialog, select Maven \u0026gt; Existing Maven Projects, click Next and select the \u0026ldquo;Weasis\u0026rdquo; or \u0026ldquo;weasis-dev\u0026rdquo; directory. As it is generally not necessary to get all the Maven projects visible into Eclipse, Deselect All and select only the plugins your are interested in (at least weasis-launcher and weasis-framework). See Egit documentation\n     Building Weasis plug-ins\n Select the weasis-framework project (or the pom.xml in the project) Right click, Run as \u0026gt; Maven Install (Compiling and installing all the plug-ins in the local Maven repository) Or run a custom Maven build entry in the Run As menu  Example for building Weasis Select the weasis-framework project Right click, Run as \u0026gt; Run Configurations\u0026hellip; Getting errors on the projects. Try the following instructions:\n Right click on the project and Maven \u0026gt; Update Project Configuration Right click on the project and select Refresh Project \u0026gt; Update All Maven Dependencies Project \u0026gt; Clean all projects Right click Close Project and then Open Project   If you have Maven installed on your system or TM terminal Eclipse plugin, it is sometimes easier to type the maven commands directly in a console.\n    Building Weasis Distributions\n Requires to have installed all the plug-ins as described just the item above If weasis-distributions project is not in the Package Explorer list, import it:  Open File \u0026gt; Import\u0026hellip; In the Import dialog, select Maven \u0026gt; Existing Maven Projects, click Next Click on Browse and select the weasis-distributions folder (in yourWorkspace/weasis-framework) Press Select All and Finnish  Select the weasis-distributions project Right click, Run as \u0026gt; Maven Install The distribution files are located in the target/dist folder of the project.\nSee Building Weasis from source for more advanced options.\n    Debug or Run from Eclipse For debugging Weasis, you need to create a Debug configuration:\n Open Run \u0026gt; Debug Configurations\u0026hellip; Create a new Java Application In the Main tab, enter:  Project: weasis-launcher Main Class: org.weasis.launcher.WeasisLauncher  In the Arguments tab\n Program arguments, examples for loading DICOM locally:\n$dicom:get -l \u0026quot;D:\\\\images\\\\dicom\u0026quot;  For more commands at startup see Weasis commands.\n In Eclipse launcher parameters, \u0026lsquo;\u0026amp;\u0026rsquo; wihtin URLs needs to be escaped with backslash.\n  VM arguments, minimal configuration:\n-Xms64m -Xmx768m -Dgosh.args=\u0026quot;-sc telnetd -p 17179 start\u0026quot;  Other VM arguments, exemples with specific configuration files:\n For Launching Weasis Dicomizer:\n-Dfelix.extended.config.properties=file:target/conf/ext-dicomizer.properties  Configuration from an URL:\n-Dfelix.extended.config.properties=file:http://mysite.com/weasis/conf/ext-config.properties  Meaning of the properties (see also Preferences):\nfelix.config.properties defines the location of config.properties (the OSGI configuration and the list of plug-ins to install/start)\nfelix.extended.config.properties defines the location of ext-config.properties (extends/overrides config.properties)\n     "
},
{
	"uri": "https://nroduit.github.io/en/tutorials/calibration/",
	"title": "Spatial Calibration",
	"tags": [],
	"description": "How to change the spatial calibration of an image or a series",
	"content": " How to change the spatial calibration   "
},
{
	"uri": "https://nroduit.github.io/en/stories/",
	"title": "Stories",
	"tags": [],
	"description": "",
	"content": " The latest software developed at the University Hospital of Geneva (HUG) for medical imaging is Weasis which is the clinical viewer in the home-made Electronic Medical Records. Since 2010 it is an open source project distributed either as a WEB application or as a multi-platform portable application (about 50’000 downloads in 2017 for the portable version).\nThe University Hospital of Geneva has a long history of medical imaging sofware. Starting in 1990 at HUG, Osiris was the first radiological imaging viewer freely distributed and then in 2003 OsiriX was the Mac successor to Osiris.\nList of Weasis Success Stories Tell us if Weasis has been successfully used in your research projects, clinical applications or healthcare networks.\nEdit this page with a pull request or send a message to @nroduit and we\u0026rsquo;ll share it on this page.\n  Weasis touch\nWeasis touch with JavaFX\n PACS in Bhutan\nPACS for Bhutan: a cost effective open source architecture for emerging countries\n Weasis plugin for quantitative analysis\nA Response Assessment Platform for Development and Validation of Imaging Biomarkers in Oncology\n Weasis UI driven by Kinect\n Kinect in operating room Gesture-Controlled Image Management for Operating Room  Weasis supporting the data workflow in multi-center trials\nDICOM for Clinical Research: PACS-Integrated Electronic Data Capture in Multi-Center Trials\n Weasis UI driven by Leap Motion\nTouchless gesture recognition system for imaging controls in sterile environment\n System for veterinary practices\nA Reliable, Low-Cost Picture Archiving and Communications System for Small and Medium Veterinary Practices Built Using Open-Source Technology\n  "
},
{
	"uri": "https://nroduit.github.io/en/basics/commands/",
	"title": "Weasis Commands",
	"tags": [],
	"description": "List of commands at start-up and for driving Weasis",
	"content": " The commands listed below can be applied at start-up or in a telnet session. All the commands starting by \u0026ldquo;dcmview2d:\u0026rdquo; allow to drive Weasis and are not adapted to be used at start-up.\nThis page matches to Weasis 2.5.1 or higher. The syntax of usage comes from POSIX.\n For getting the list of commands, after starting Weasis, open a local telnet session of the OSGI Console and type lb for getting the list of bundles and their state or type help for getting all the available commands:\ntelnet localhost 17179 Trying 127.0.0.1... Connected to localhost.localdomain. Escape character is \u0026#39;^]\u0026#39;. ____________________________ Welcome to Apache Felix Gogo g!  Modifying the default port number: This value can be changed in the configuration of the launcher (by overriding the property or with a new jnlp template)\n List of Weasis commands dcmview2d:layout g! dcmview2d:layout Select a split-screen layout Usage: dcmview2d:layout ( -n NUMBER | -i ID ) -n --number=NUMBER select the best matching number of views -i --id=ID select the layout from its identifier -? --help show help dcmview2d:mouseLeftAction g! dcmview2d:mouseLeftAction Change the mouse left action Usage: dcmview2d:mouseLeftAction COMMAND COMMAND is (sequence|winLevel|zoom|pan|rotation|crosshair|measure|draw|contextMenu|none) -? --help show help dcmview2d:move g! dcmview2d:move Pan the selected image Usage: dcmview2d:move -- X Y X and Y are Integer. It is mandatory to have \u0026#39;--\u0026#39; (end of options) for negative values -? --help show help dcmview2d:reset g! dcmview2d:reset Reset image display Usage: dcmview2d:reset (-a | COMMAND...) COMMAND is (winLevel|zoom|pan|rotation) -a --all reset to original display -? --help show help dcmview2d:scroll g! dcmview2d:scroll Scroll into the images of the selected series Usage: dcmview2d:scroll ( -s NUMBER | -i NUMBER | -d NUMBER) -s --set=NUMBER set a new value from 1 to series size -i --increase=NUMBER increase of some amount -d --decrease=NUMBER decrease of some amount -? --help show help dcmview2d:synch g! dcmview2d:synch Set a synchronization mode Usage: dcmview2d:synch VALUE VALUE is (None|Stack|Tile) -? --help show help dcmview2d:wl g! dcmview2d:wl Change the window/level values of the selected image (increase or decrease into a normalized range of 4096) Usage: dcmview2d:wl -- WIN LEVEL WIN and LEVEL are Integer. It is mandatory to have \u0026#39;--\u0026#39; (end of options) for negative values -? --help show help dcmview2d:zoom g! dcmview2d:zoom Change the zoom value of the selected image Usage: dcmview2d:zoom (set VALUE | increase NUMBER | decrease NUMBER) -s --set=VALUE [decimal value] set a new value from 0.0 to 12.0 (zoom magnitude, 0.0 =\u0026gt; default, -200.0 =\u0026gt; best fit, -100.0 =\u0026gt; real size) -i --increase=NUMBER increase of some amount -d --decrease=NUMBER decrease of some amount -? --help show help dicom:get g! dicom:get Load DICOM files remotely or locally Usage: dicom:get ([-l PATH]... [-r URI]... [-p] [-i DATA]... [-w URI]...) PATH is either a directory(recursive) or a file -l --local=PATH open DICOMs from local disk -r --remote=URI open DICOMs from an URI -p --portable open DICOMs from configured directories at the same level of the executable -i --iwado=DATA open DICOMs from an XML manifest (GZIP-Base64) -w --wado=URI open DICOMs from an XML manifest -? --help show help dicom:close g! dicom:close Close DICOM files Usage: dicom:close (-a | ([-y UID]... [-s UID]...)) -a --all close all the patients -y --study=UID close a study, UID is Study Instance UID -s --series=UID close a series, UID is Series Instance UID -? --help show help image:get g! image:get Load images remotely or locally Usage: image:get ([-f file]... [-u url]...) -f --file=FILE open an image from a file -u --url=URL open an image from an URL -? --help show help image close g! image:close Close images Usage: dicom:close (-a | ([-g UID]... [-s UID]...)) -a --all close all series -g --group=UID close a group from its UID -s --series=UID close an series/image from its UID -? --help show help weasis:info g! weasis:info Show information about Weasis Usage: weasis:info (-v | -a) -v --version show version -a --all show weasis specifications -? --help show help weasis:ui g! weasis:ui Manage user interface Usage: weasis:ui (-q | -v) -q --quit shutdown Weasis -v --visible set window on top -? --help show help acquire:patient g! acquire:patient Load Patient Context from the first argument Usage: acquire:patient (-x | -i | -s | -u) arg arg is an XML text in UTF8 or an url with the option \u0026#39;--url\u0026#39; -x --xml open Patient Context from an XML data containing all DICOM Tags -i --inbound open Patient Context from an XML data containing all DICOM Tags, decoding syntax is [Base64/GZip] -s --iurlsafe open Patient Context from an XML data containing all DICOM Tags, decoding syntax is [Base64_URL_SAFE/GZip] -u --url open Patient Context from an URL (XML file containing all DICOM TAGs) -? --help show help For identifying the commands at start-up, the symbol \u0026ldquo;$\u0026rdquo; must be added before the command (not required in the OSGI console). See examples below.\n Weasis Portable distribution There are two ways to open local images with the portable distribution.\n Load images automatically from a configured directory\nSet images into a “dicom” or “images” directory at the same level of the binary launcher (c.f. weasis-win32.exe). The default directories can be changed in weasis/conf/config.properties, see the properties starting by \u0026ldquo;weasis.portable.\u0026rdquo; in Weasis Weasis Preferences. Launch Weasis by double clicking on the executable file or in command-line (c.f. on Linux: ./weasis-linux.sh \u0026lsquo;$dicom:get \u0026ndash;portable\u0026rsquo;)\n  Launch arguments\n Linux and Mac: commands must be in between quotes\n./viewer-linux.sh \u0026#39;$dicom:get -l /home/Images/\u0026#39; Multiple commands: ./viewer-linux.sh \u0026#39;$dicom:get -l \u0026#34;/DICOM/Overlay\u0026#34;\u0026#39; \u0026#39;$weasis:ui --visible\u0026#39; Local directories (recursive) or files: ./viewer-linux.sh \u0026#39;$dicom:get -l \u0026#34;/DICOM/Overlay\u0026#34; -l \u0026#34;/DICOM/test/file.dcm\u0026#34;\u0026#39; Open non DICOM images (Local and URL): ./viewer-linux.sh \u0026#39;$image:get -f \u0026#34;/home/Images/test.png\u0026#34; -u https://dcm4che.atlassian.net/wiki/download/attachments/3670024/weasis-mpr.png\u0026#39; Windows commands\nviewer-win32.exe $dicom:get -l \u0026#34;E:\\\\DICOM\\\\Overlay\u0026#34; -l \u0026#34;E:\\\\DICOM\\\\Shutter\u0026#34; viewer-win32.exe $dicom:get -l \u0026#34;E:/DICOM/Overlay\u0026#34; -l \u0026#34;E:/DICOM/Shutter\u0026#34;   Special characters: The command interpreter has changed from weasis 2.6.0. Command containing special characters like \u0026lsquo;\u0026amp;\u0026rsquo; must be within quotes or double quotes. Example: dicom:get -w \u0026ldquo;url\u0026rdquo; It also depends of the command line system. For instance in the Eclipse launcher parameters, ‘\u0026amp;’ wihtin URLs needs to be escaped with backslash.\n "
},
{
	"uri": "https://nroduit.github.io/en/basics/dicom/",
	"title": "Dicom Conformance",
	"tags": [],
	"description": "DICOM Conformance Statements of Weasis",
	"content": " Compatibility of DICOM Transfer Syntax    Transfer Syntax UID Description Supported     1.2.840.10008.1.2 Implicit VR - Little Endian yes   1.2.840.10008.1.2.1 Explicit VR - Little Endian yes   1.2.840.10008.1.2.2 Explicit VR - Big Endian yes   1.2.840.10008.1.2.5 RLE (Run Length Encoding) Lossless yes   1.2.840.10008.1.2.4.50 JPEG Baseline (Process 1): Default Transfer Syntax for Lossy JPEG 8 Bit Image Compression yes   1.2.840.10008.1.2.4.51 JPEG Extended (Process 2 \u0026amp; 4): Default Transfer Syntax for Lossy JPEG 12 Bit Image Compression (Process 4 only) yes   1.2.840.10008.1.2.4.57 JPEG Lossless, Non-Hierarchical (Process 14) yes   1.2.840.10008.1.2.4.70 JPEG Lossless, Non-Hierarchical, First-Order Prediction (Process 14 [Selection Value 1]): Default Transfer Syntax for Lossless JPEG Image Compression yes   1.2.840.10008.1.2.4.80 JPEG-LS Lossless Image Compression yes   1.2.840.10008.1.2.4.81 JPEG-LS Lossy (Near-Lossless) Image Compression yes   1.2.840.10008.1.2.4.90 JPEG 2000 Image Compression (Lossless Only) yes   1.2.840.10008.1.2.4.91 JPEG 2000 Image Compression yes    These TSUIDs are available with Weasis 2.5 and later for Windows, Mac OS X and Linux.\n    Transfer Syntax UID Description Supported     1.2.840.10008.1.2.6.1 RFC 2557 MIME Encapsulation yes   1.2.840.10008.1.2.4.100 MPEG-2 Main Profile Main Level yes   1.2.840.10008.1.2.4.101 MPEG-2 Main Profile High Level yes   1.2.840.10008.1.2.4.102 MPEG-4 AVC/H.264 High Profile / Level 4.1 yes   1.2.840.10008.1.2.4.103 MPEG-4 AVC/H.264 BD-compatible High Profile / Level 4.1 yes    These TSUIDs are open by the default system application associated to the MIME type.\n Supported \u0026ldquo;Photometric Interpretation\u0026rdquo; pixel format    Photometric Interpretation Description Supported     MONOCHROME1 grey level image description (high values=dark, low values=bright) yes   MONOCHROME2 grey level image description (high values=bright, low values=dark) yes   PALETTE COLOR pseudo color image description yes   RGB true color image description yes   YBR_FULL true color image description yes   YBR_FULL_422 true color image description yes    "
},
{
	"uri": "https://nroduit.github.io/en/basics/customize/rebuild-dcm4chee-web/",
	"title": "Rebuild dcm4chee-web",
	"tags": [],
	"description": "",
	"content": " Build dcm4chee-web 2.15.0, 2.16.2 or 2.17.0 Prerequisites  Subversion (SVN), one of the following client:  Subversion - The core system (server, client, libs) Subversive - SVN Team Client (Eclipse plugin) TortoiseSVN - Handy SVN client for Windows systems  JDK 6 or higher Ant 1.6 or higher  Getting the Source To check out the code, first install Subversion and either checkout the trunk branch using a graphical Subversion client (such as TortoiseSVN) or directly from the command line using the command:\n$ svn co https://svn.code.sf.net/p/dcm4che/svn/weasis/weasis_dcm4chee/trunk/2.17.0 weasis-dcm4chee-2.17.0 This command will copy the current development code (the \u0026ldquo;trunk\u0026rdquo;) into a local directory named weasis-dcm4chee-2.17.0.\nBuilding dcm4chee-web.war  Go in the weasis-dcm4chee directory Compile and make the dcm4chee-web.war (in weasis-dcm4chee/dist folder)\n$ ant dist Modify the permission in /dcm4jboss-web/src/etc/conf/dcm4chee-web/folder.permissions or in server/default/conf/dcm4chee-web if dcm4chee is already installed:\n folder.*=edit,move,delete,view,*export,edit.newStudyUID,mergepat,study_permission,study_permission.free_role_action,query_has_issuer folder.*export=export_tf,export_xds\n\u0026hellip;\nfolder=WebUser(send,view);DatacareUser(edit,move,delete,export_xds,view);WebAdmin(*)\n Place the dcm4chee-web.war and the weasis.war to the deploy folder of dcm4chee\n  Rebuild dcm4chee-web from any version (Draft)  Make a project to rebuild dcm4chee-web\n Download a dcm4chee package (any db package, ex. dcm4chee-2.14.7-mysql.zip) Create new Java project (see example of dcm4chee-web 2.17.0, Eclipse project) Extract dcm4chee-web.war Link required binaries (commons-codec.jar,dcm4che.jar,dcm4chee-ejb-client.jar,jboss-j2ee.jar,servlet-api.jar,slf4j-api-1.6.1.jar) to the project from default/lib/ or from jboss 4.2.3 (if not installed in dcm4chee) Link required binaries (maverick.jar and dcm4chee-web.jar) from ddcm4chee-web/WEB-INF/lib/ Add viewer.gif in dcm4chee-web/images Add launcher.properties in dcm4chee-web/viewer Add java sources in src folder Move the content of the WEB-INF/classes in etc/message Copy build.xml and modify it if necessary  Replace in maverick.xml:\n\u0026lt;controller class=\u0026quot;org.dcm4chex.archive.web.maverick.FolderSubmitCtrl\u0026quot; /\u0026gt; by \u0026lt;controller class=\u0026quot;org.dcm4chex.archive.web.maverick.FolderSubmitCtrl2\u0026quot; /\u0026gt;\n Add text for Weasis button\n in dcm4chee-web/translate.dtd \u0026lt;!ENTITY ViewSelectedEntities \u0026quot;View selected Entities in Weasis\u0026quot;\u0026gt; in dcm4chee-web/de/translate.dtd \u0026lt;!ENTITY ViewSelectedEntities \u0026quot;Ausgewählte Entitäten in Weasis sehen\u0026quot;\u0026gt; in dcm4chee-web/fr/translate.dtd \u0026lt;!ENTITY ViewSelectedEntities \u0026quot;Visualiser la sélection dans Weasis\u0026quot;\u0026gt; in dcm4chee-web/jp/translate.dtd \u0026lt;!ENTITY ViewSelectedEntities \u0026quot;View selected Entities in Weasis\u0026quot;\u0026gt;  Modify dcm4chee-web/folder-tpl.xsl\n Add after \u0026lt;xsl:param name=\u0026#34;folder.view\u0026#34; select=\u0026#34;\u0026#39;false\u0026#39;\u0026#34; /\u0026gt; Add after \u0026lt;xsl:if test=\u0026quot;$folder.delete='true'\u0026quot;\u0026gt; … \u0026lt;/xsl:if\u0026gt;\n\u0026lt;xsl:if test=\u0026#34;$folder.view=\u0026#39;true\u0026#39;\u0026#34;\u0026gt; \u0026lt;td width=\u0026#34;40\u0026#34;\u0026gt; \u0026lt;input type=\u0026#34;image\u0026#34; value=\u0026#34;View\u0026#34; name=\u0026#34;view\u0026#34; src=\u0026#34;images/view.gif\u0026#34; alt=\u0026#34;view\u0026#34; border=\u0026#34;0\u0026#34; title=\u0026#34;\u0026amp;ViewSelectedEntities;\u0026#34; onclick=\u0026#34;return confirm(\u0026#39;\u0026amp;ViewSelectedEntities;?\u0026#39;)\u0026#34;\u0026gt; \u0026lt;xsl:if test=\u0026#34;total \u0026lt;= 0\u0026#34;\u0026gt; \u0026lt;xsl:attribute name=\u0026#34;disabled\u0026#34;\u0026gt;disabled \u0026lt;/xsl:attribute\u0026gt; \u0026lt;/xsl:if\u0026gt; \u0026lt;/input\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/xsl:if\u0026gt;  Rebuild WAR with \u0026ldquo;ant dist\u0026rdquo; and get dcm4chee-web.war in dist folder\n Modify the permission in /dcm4jboss-web/src/etc/conf/dcm4chee-web/folder.permissions or in server/default/conf/dcm4chee-web if dcm4chee is already installed:\n folder.*=edit,move,delete,view,*export,edit.newStudyUID,mergepat,study_permission,study_permission.free_role_action,query_has_issuer folder.*export=export_tf,export_xds\n\u0026hellip;\nfolder=WebUser(send,view);DatacareUser(edit,move,delete,export_xds,view);WebAdmin(*)\n Place the dcm4chee-web.war and the weasis.war to the deploy folder of dcm4chee\n  "
},
{
	"uri": "https://nroduit.github.io/en/getting-started/translating/",
	"title": "Internationalization",
	"tags": [],
	"description": "How to contribute to the Weasis translation",
	"content": " The translation files are now hosted and managed on Transifex website. Get an account at Transifex and help translating to your language! If your language is missing, just head over to Transifex and request a new language.\nText length: The translations for many languages frequently exceed the length of the corresponding English source. It could be a problem for the layout of graphical components (e.g. buttons).\n Special characters: Some characters representing values (%d, %s), new line (\\n) and html tags must not be translated. For other translating recommendations, see Transifex help\nFor special words or particular contexts look at the \u0026ldquo;Instructions\u0026rdquo; text box (gives explanations or definitions).\n Building Weasis-i18n weasis-i18n is the internationalization project (i18n) of Weasis. As a separate project, it can have its own release cycle. The OSGI fragments of plug-ins contain only the translation files which are merged during runtime to the matching module of the application.\nThat means the weasis-i18n.war file can be deployed at any time, it does not need to follow the Weasis life cycle. The plug-in translation will be updated by Weasis only if the timestamp number has changed. This timestamp is set during the build phase described below.\n Additional projects to obtain a full translation of Weasis:\nThe java-swing-dialogs translations must be updated manually in the weasis-launcher module and docking-frames translations must be packaged with the library.\n Prerequisites  JDK 8 or higher Maven 3 or higher\nIf your computer is behind a proxy server, configure maven. Git or directly download source from gitub  Getting the Source To clone the repository, first install GIT and either clone using a graphical GIT client (such as Tortoise Git) or directly from the command line using the command:\n$ git clone https://github.com/nroduit/weasis-i18n.git Build the distribution Go in the weasis-i18n directory, Compile and install all the plug-ins in the local Maven repository\n$ mvn clean install -Dtransifex.credential=\u0026lt;\u0026#34;username:password\u0026#34;\u0026gt; All of the API calls on Transifex require the user to be authenticated. So the value \u0026ldquo;username:password\u0026rdquo; must be replaced by your credential, see how to create an account on Transifex.\nCommand if you are behind a proxy server: $ mvn clean install -DproxySet=true -DproxyHost=\u0026lt;host\u0026gt; -DproxyPort=\u0026lt;port\u0026gt; -Dtransifex.credential=\u0026lt;\u0026#34;username:password\u0026#34;\u0026gt;\nThe distribution files are located in the weasis-i18n-dist/target/dist folder. weasis-i18n.war must be placed in the same base context as weasis.war (if in other web context, the value of the property weasis.i18n in JNLP file must be adapted).\nTo update translation packs in weasis-portable, unzip weasis-i18n.zip and replace files in weasis-portable/weasis/bundle-i18n/.\n weasis-launcher-i18n cannot not be updated dynamically as the launcher is not an OSGI module. It must be imported in the Weasis source (weasis-launcher).\n "
},
{
	"uri": "https://nroduit.github.io/en/tutorials/theme/",
	"title": "Styles and themes",
	"tags": [],
	"description": "How to apply another sytle and theme",
	"content": " How to apply another theme Changing from the user interface From the main menu, open File \u0026gt; Preferences (Alt + P) and select the desired look and feel (click on show to see a partial preview)\nChanging the default look and feel value See preferences\n"
},
{
	"uri": "https://nroduit.github.io/en/tutorials/locale/",
	"title": "Translation",
	"tags": [],
	"description": "How to change the language and regional setings",
	"content": " How to change the language and regional settings Changing from the user interface From the main menu, open File \u0026gt; Preferences (Alt + P) and select the desired language and the regional format.\nAnywhere in the user interface, date and number should be display with the selected regional format.\n Changing the default locale setting See preferences\n"
},
{
	"uri": "https://nroduit.github.io/en/tutorials/touch/",
	"title": "Weasis Multi-Touch",
	"tags": [],
	"description": "Redesigned user interface with JavaFX and multi-touch support",
	"content": " Master Thesis of Gérôme Pasquier   Try it from the demo server\n"
},
{
	"uri": "https://nroduit.github.io/en/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://nroduit.github.io/en/faq/",
	"title": "FAQs",
	"tags": [],
	"description": "Weasis Frequently Asked Questions",
	"content": " Frequently Asked Questions \n  Why the Weasis license is Eclipse Public License?    The Eclipse Public License is an OSI approved license and a commercially friendly copyleft license.\nEPL is more business-friendly about some patent retaliation and reverse engineering clauses than LGPL. With EPL, derivative work (weasis plugin) can be distributed in any license type: open source, freeware, commercial\u0026hellip; However, if you distribute Weasis with some modifications (changing existing source code of the open source Weasis plug-ins), even if it is a free distribution, you are obligated to make your modifications available to others.\nFor more information about EPL, check out the EPL 2 FAQ.\n     How to start Weasis automatically from a web page without downloading jnlp?    From the Oracle Java Runtime 8 update 111, it is possible to launch a Java Webstart application from the jnlp protocol. See the new way of launching Java Westart with weasis-pacs-connector.\n     Can Weasis be incorporated in DICOM CDs or other removable media?    Yes, the Weasis portable version can be copied in DICOM CD-ROMs as a multi-platform stand-alone viewer with launchers for Mac OS X, Linux and Windows. The viewer requires that a Java Runtime Environment (JRE 8 or greater) be installed on the machine to run. If Java is not installed on Windows, a dialog will propose to install it from the Internet.\nThe executable (viewer-win32.exe) allows to embed a JRE in the relative directory \u0026ldquo;jre/windows\u0026rdquo; (e.g. weasis-portable/jre/windows/bin/java.exe). To support 32 and 64-bit architecture, copy 32-bit Java Rutime from its installed directory.\nNote: the embedded Java Runtime is used only when no runtime is available on the system. When Java is run from CD, it could be a little slow.\n The viewer loads automatically images from DICOMDIR or from directories configured in \u0026ldquo;weasis/conf/config.properties (by default weasis.portable.dicom.directory=dicom,DICOM,IMAGES,images).\nFor burning Weasis with dcm4chee-cdw, look at Write weasis-portable to DICOM CDs with dcm4chee-cdw.\n     How to enable Weasis logging?    Logs are available either in the Java console or in Weasis log files.\n By displaying the Java console:\n Windows Linux Mac:  Navigate to the following folder: Applications \u0026gt; Utilities \u0026gt; Java. Click the Java Preferences icon and then the Advanced tab. Under the Java console section, select the Show console radio button.   By writing to log files:\n From Weasis 1.1.2, logging can be activated from File \u0026gt; Preferences \u0026gt; General The default logging configuration comes from config.properties or ext-config.properties, see Weasis Preferences.        Is it possible to download DICOM files without having a WADO server?    Yes, but a WADO server is recommended. Downloading DICOMs can be achieved by:\n Bulding an xml file by using DirectDownloadFile and DirectDownloadThumbnail: Adding the following parameter in the argument tag of the JNLP or as an argument of the weasis-portable executable file:\n$dicom:get -r http://external.server/images/MRIX_LUMBAR/img1.dcm http://external.server/images/img2.dcm\nNote: This option must be used only for a very limited number of files     "
},
{
	"uri": "https://nroduit.github.io/en/get-involved/",
	"title": "Get Involved!",
	"tags": [],
	"description": "How to participate in the Weasis project",
	"content": " Report Bugs and Enhancements First, search the JIRA system, the forum and/or this website (like FAQs or Getting Started) to see if your problem has not been reported yet.\nOnly then, fill a bug on JIRA with the most details:\n For categorizing the issue, select the appropriate type:  Bug: a bug, anything that does not work as expected Improvement: an enhancement over an existing feature New Feature: a new feature Task: everything else, something that needs to be done  Use the short summary field to describe the main goal of your issue. Select the appropriate field:  Priority, for asserting the importance of a issue Affects version of Weasis  Describe the application basic context (OS, JRE version, \u0026hellip;) and attach error log file. Provide code examples, use cases and/or steps to reproduce the problem.  Become a Committer  Become a committer on an existing project or on one of the incubating projects, for Weasis use pull rquests.  Share Your Knowledge  Do you or your company have a success story about Weasis? Send a story to @nroduit and we\u0026rsquo;ll share it on this website. Help building the documentation. Each page or the entire website can be forked and modify with pull requests. Localization: Help translating Weasis into other languages. Help on the forum other users.  "
},
{
	"uri": "https://nroduit.github.io/en/demo/",
	"title": "Launch Weasis",
	"tags": [],
	"description": "Various DICOM samples for testing the viewer capabilities",
	"content": " Demo with multiple DICOM Samples This page shows a list of DICOM samples for testing viewer capabilities.\nNaming convention\n Patient name starting with \u0026ldquo;TEST^\u0026rdquo; and then the general test purpose. \u0026ldquo;TEST-i18n-\u0026rdquo; prefix is for internationalization test. In study description: general test description In series description: test description   The demo server is on free cloud system, so sometime it requires to launch two times the viewer because the server has to wake up (is turned \u0026ldquo;idle\u0026rdquo; after a period of inactivity).\n How to launch Weasis To display the DICOM samples in this page, you need a recent version of Java installed on your system.\nTwo possible ways of launching Weasis when clicking on Launch button:\n Download JNLP will download a jnlp file on most browsers. The the file needs to be executed (double click on the file) from the download folder. JNLP Protocol will open directly Weasis with the new jnlp protocol (needs a jnlp handler) Registration of jnlp handler is available in Oracle Java Runtime installer from JRE 8_111 and in the Java 9 installer:\n On Windows, it works out of box. On Mac OS X, it could be necessary to run once Java Webstart to register the jnlp handler at /Library/Internet Plug-Ins/JavaAppletPlugin.plugin/Contents/Resources/javawslauncher.app On Linux, a configuration is required.      Internationalized characters JNLP Protocol Weasis 3.0.0-RC1 Weasis Touch 3.0.0-RC1 (JavaFX) Weasis 2.6.2 Weasis 2.0.7  Download JNLP Weasis 3.0.0-RC1 Weasis Touch 3.0.0-RC1 (JavaFX) Weasis 2.6.2 Weasis 2.0.7   Should display: Pixel depth (from 9-bit to 16-bit) Should always render the same image.\n  Unsigned data JNLP Protocol Weasis 3.0.0-RC1 Weasis Touch 3.0.0-RC1 (JavaFX) Weasis 2.6.2 Weasis 2.0.7  Download JNLP Weasis 3.0.0-RC1 Weasis Touch 3.0.0-RC1 (JavaFX) Weasis 2.6.2 Weasis 2.0.7    Signed data JNLP Protocol Weasis 3.0.0-RC1 Weasis Touch 3.0.0-RC1 (JavaFX) Weasis 2.6.2 Weasis 2.0.7  Download JNLP Weasis 3.0.0-RC1 Weasis Touch 3.0.0-RC1 (JavaFX) Weasis 2.6.2 Weasis 2.0.7     Compression  Different compression syntaxes (JPEG, JPEG-Lossless, JPEG-LS, J2K, RLE) JNLP Protocol Weasis 3.0.0-RC1 Weasis Touch 3.0.0-RC1 (JavaFX) Weasis 2.6.2 Weasis 2.0.7  Download JNLP Weasis 3.0.0-RC1 Weasis Touch 3.0.0-RC1 (JavaFX) Weasis 2.6.2 Weasis 2.0.7    Compression and fragments (the file contains the encoded pixel data stream fragmented into several parts, see DICOM part5) JNLP Protocol Weasis 3.0.0-RC1 Weasis Touch 3.0.0-RC1 (JavaFX) Weasis 2.6.2 Weasis 2.0.7  Download JNLP Weasis 3.0.0-RC1 Weasis Touch 3.0.0-RC1 (JavaFX) Weasis 2.6.2 Weasis 2.0.7    Compression, multi-frame and fragments JNLP Protocol Weasis 3.0.0-RC1 Weasis Touch 3.0.0-RC1 (JavaFX) Weasis 2.6.2 Weasis 2.0.7  Download JNLP Weasis 3.0.0-RC1 Weasis Touch 3.0.0-RC1 (JavaFX) Weasis 2.6.2 Weasis 2.0.7     Photometric Interpretation JNLP Protocol Weasis 3.0.0-RC1 Weasis Touch 3.0.0-RC1 (JavaFX) Weasis 2.6.2 Weasis 2.0.7  Download JNLP Weasis 3.0.0-RC1 Weasis Touch 3.0.0-RC1 (JavaFX) Weasis 2.6.2 Weasis 2.0.7   Pixel Spacing JNLP Protocol Weasis 3.0.0-RC1 Weasis Touch 3.0.0-RC1 (JavaFX) Weasis 2.6.2 Weasis 2.0.7  Download JNLP Weasis 3.0.0-RC1 Weasis Touch 3.0.0-RC1 (JavaFX) Weasis 2.6.2 Weasis 2.0.7   Select the view and press \u0026rsquo;d\u0026rsquo; to draw line.\n Pixel Padding Value JNLP Protocol Weasis 3.0.0-RC1 Weasis Touch 3.0.0-RC1 (JavaFX) Weasis 2.6.2 Weasis 2.0.7  Download JNLP Weasis 3.0.0-RC1 Weasis Touch 3.0.0-RC1 (JavaFX) Weasis 2.6.2 Weasis 2.0.7   Show or hide pixel padding from the \u0026ldquo;Display\u0026rdquo; right pane.\n Non square pixels JNLP Protocol Weasis 3.0.0-RC1 Weasis Touch 3.0.0-RC1 (JavaFX) Weasis 2.6.2 Weasis 2.0.7  Download JNLP Weasis 3.0.0-RC1 Weasis Touch 3.0.0-RC1 (JavaFX) Weasis 2.6.2 Weasis 2.0.7   Stretch or shrink the image according the \u0026ldquo;pixel spacing\u0026rdquo; or \u0026ldquo;pixel aspect ratio\u0026rdquo; field.\n Overlay  JNLP Protocol Weasis 3.0.0-RC1 Weasis Touch 3.0.0-RC1 (JavaFX) Weasis 2.6.2 Weasis 2.0.7  Download JNLP Weasis 3.0.0-RC1 Weasis Touch 3.0.0-RC1 (JavaFX) Weasis 2.6.2 Weasis 2.0.7   Show or hide from the \u0026ldquo;Display\u0026rdquo; right panel.\n Modality LUT JNLP Protocol Weasis 3.0.0-RC1 Weasis Touch 3.0.0-RC1 (JavaFX) Weasis 2.6.2 Weasis 2.0.7  Download JNLP Weasis 3.0.0-RC1 Weasis Touch 3.0.0-RC1 (JavaFX) Weasis 2.6.2 Weasis 2.0.7   Should always render the same image.\n VOI LUT JNLP Protocol Weasis 3.0.0-RC1 Weasis Touch 3.0.0-RC1 (JavaFX) Weasis 2.6.2 Weasis 2.0.7  Download JNLP Weasis 3.0.0-RC1 Weasis Touch 3.0.0-RC1 (JavaFX) Weasis 2.6.2 Weasis 2.0.7   Can be changed in the \u0026ldquo;Image Tool\u0026rdquo; right panel.\n Shutter JNLP Protocol Weasis 3.0.0-RC1 Weasis Touch 3.0.0-RC1 (JavaFX) Weasis 2.6.2 Weasis 2.0.7  Download JNLP Weasis 3.0.0-RC1 Weasis Touch 3.0.0-RC1 (JavaFX) Weasis 2.6.2 Weasis 2.0.7   Show or hide from the \u0026ldquo;Display\u0026rdquo; right panel.\n DICOM PDF JNLP Protocol Weasis 3.0.0-RC1 Weasis Touch 3.0.0-RC1 (JavaFX) Weasis 2.6.2 Weasis 2.0.7  Download JNLP Weasis 3.0.0-RC1 Weasis Touch 3.0.0-RC1 (JavaFX) Weasis 2.6.2 Weasis 2.0.7   Open by the default PDF viewer of the operating system.\n DICOM video JNLP Protocol Weasis 3.0.0-RC1 Weasis Touch 3.0.0-RC1 (JavaFX) Weasis 2.6.2 Weasis 2.0.7  Download JNLP Weasis 3.0.0-RC1 Weasis Touch 3.0.0-RC1 (JavaFX) Weasis 2.6.2 Weasis 2.0.7   Open by the default viewer (associated to the video mime type) of the operating system.\n DICOM Audio (AU) JNLP Protocol Weasis 3.0.0-RC1 Weasis Touch 3.0.0-RC1 (JavaFX) Weasis 2.6.2 Weasis 2.0.7  Download JNLP Weasis 3.0.0-RC1 Weasis Touch 3.0.0-RC1 (JavaFX) Weasis 2.6.2 Weasis 2.0.7   Open by the embedded Java Audio Player.\n DICOM floating point pixel data JNLP Protocol Weasis 3.0.0-RC1 Weasis Touch 3.0.0-RC1 (JavaFX) Weasis 2.6.2 Weasis 2.0.7  Download JNLP Weasis 3.0.0-RC1 Weasis Touch 3.0.0-RC1 (JavaFX) Weasis 2.6.2 Weasis 2.0.7   DICOM Structured Report (SR) JNLP Protocol Weasis 3.0.0-RC1 Weasis Touch 3.0.0-RC1 (JavaFX) Weasis 2.6.2 Weasis 2.0.7  Download JNLP Weasis 3.0.0-RC1 Weasis Touch 3.0.0-RC1 (JavaFX) Weasis 2.6.2 Weasis 2.0.7   DICOM Presentation State (PR, GSPS) Click on the right icon over the image to select the Presentation State. Show or hide graphic layers from the \u0026ldquo;Display\u0026rdquo; right panel. See How to build DICOM PR.\n  Shutter Test JNLP Protocol Weasis 3.0.0-RC1 Weasis Touch 3.0.0-RC1 (JavaFX) Weasis 2.6.2 Weasis 2.0.7  Download JNLP Weasis 3.0.0-RC1 Weasis Touch 3.0.0-RC1 (JavaFX) Weasis 2.6.2 Weasis 2.0.7    Text Annotation JNLP Protocol Weasis 3.0.0-RC1 Weasis Touch 3.0.0-RC1 (JavaFX) Weasis 2.6.2 Weasis 2.0.7  Download JNLP Weasis 3.0.0-RC1 Weasis Touch 3.0.0-RC1 (JavaFX) Weasis 2.6.2 Weasis 2.0.7    Displayed Area JNLP Protocol Weasis 3.0.0-RC1 Weasis Touch 3.0.0-RC1 (JavaFX) Weasis 2.6.2 Weasis 2.0.7  Download JNLP Weasis 3.0.0-RC1 Weasis Touch 3.0.0-RC1 (JavaFX) Weasis 2.6.2 Weasis 2.0.7    Modality LUT PState JNLP Protocol Weasis 3.0.0-RC1 Weasis Touch 3.0.0-RC1 (JavaFX) Weasis 2.6.2 Weasis 2.0.7  Download JNLP Weasis 3.0.0-RC1 Weasis Touch 3.0.0-RC1 (JavaFX) Weasis 2.6.2 Weasis 2.0.7    VOI LUT PState JNLP Protocol Weasis 3.0.0-RC1 Weasis Touch 3.0.0-RC1 (JavaFX) Weasis 2.6.2 Weasis 2.0.7  Download JNLP Weasis 3.0.0-RC1 Weasis Touch 3.0.0-RC1 (JavaFX) Weasis 2.6.2 Weasis 2.0.7    Presentation LUT PState JNLP Protocol Weasis 3.0.0-RC1 Weasis Touch 3.0.0-RC1 (JavaFX) Weasis 2.6.2 Weasis 2.0.7  Download JNLP Weasis 3.0.0-RC1 Weasis Touch 3.0.0-RC1 (JavaFX) Weasis 2.6.2 Weasis 2.0.7    Combined LUT PState JNLP Protocol Weasis 3.0.0-RC1 Weasis Touch 3.0.0-RC1 (JavaFX) Weasis 2.6.2 Weasis 2.0.7  Download JNLP Weasis 3.0.0-RC1 Weasis Touch 3.0.0-RC1 (JavaFX) Weasis 2.6.2 Weasis 2.0.7    Spatial Transformation JNLP Protocol Weasis 3.0.0-RC1 Weasis Touch 3.0.0-RC1 (JavaFX) Weasis 2.6.2 Weasis 2.0.7  Download JNLP Weasis 3.0.0-RC1 Weasis Touch 3.0.0-RC1 (JavaFX) Weasis 2.6.2 Weasis 2.0.7    Overlay JNLP Protocol Weasis 3.0.0-RC1 Weasis Touch 3.0.0-RC1 (JavaFX) Weasis 2.6.2 Weasis 2.0.7  Download JNLP Weasis 3.0.0-RC1 Weasis Touch 3.0.0-RC1 (JavaFX) Weasis 2.6.2 Weasis 2.0.7    Graphic Annotation JNLP Protocol Weasis 3.0.0-RC1 Weasis Touch 3.0.0-RC1 (JavaFX) Weasis 2.6.2 Weasis 2.0.7  Download JNLP Weasis 3.0.0-RC1 Weasis Touch 3.0.0-RC1 (JavaFX) Weasis 2.6.2 Weasis 2.0.7    Complex Combination JNLP Protocol Weasis 3.0.0-RC1 Weasis Touch 3.0.0-RC1 (JavaFX) Weasis 2.6.2 Weasis 2.0.7  Download JNLP Weasis 3.0.0-RC1 Weasis Touch 3.0.0-RC1 (JavaFX) Weasis 2.6.2 Weasis 2.0.7    GE RA600 Test of CPI GSPS JNLP Protocol Weasis 3.0.0-RC1 Weasis Touch 3.0.0-RC1 (JavaFX) Weasis 2.6.2 Weasis 2.0.7  Download JNLP Weasis 3.0.0-RC1 Weasis Touch 3.0.0-RC1 (JavaFX) Weasis 2.6.2 Weasis 2.0.7   This sample is produced by a GE workstation and contains some proprietary items (so not all PRs can be applied)\n   DICOM Key Object Selection (KO) JNLP Protocol Weasis 3.0.0-RC1 Weasis Touch 3.0.0-RC1 (JavaFX) Weasis 2.6.2 Weasis 2.0.7  Download JNLP Weasis 3.0.0-RC1 Weasis Touch 3.0.0-RC1 (JavaFX) Weasis 2.6.2 Weasis 2.0.7   Click on the right icon over the image to select the Key Object Selection. See How to build and export DICOM KO.\n "
},
{
	"uri": "https://nroduit.github.io/en/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://nroduit.github.io/en/",
	"title": "Weasis Medical Viewer",
	"tags": [],
	"description": "Documentation of Weasis DICOM viewer",
	"content": " Weasis Medical Viewer Weasis is a multipurpose standalone and web-based DICOM viewer with a highly modular architecture.\nIt has been designed to meet several expectations of clinical information systems and their future evolution regarding medical imaging: providing a web-based access to radiological images, as well as offering multimedia capabilities.\n                              Add Measurements\n      Languages\n      MPR View\n     Weasis can be easily connect to any PACS supporting WADO via a web portal or as an XDS-I consumer in an IHE (Integrating the Healthcare Enterprise) environment.\n   Cross-lines\n      Display DICOM RT\n      ECG viewer\n      Export from Mac\n      Lens on view\n      Mammo CAD (SCOORD)\n      Multi-patient and Internalization\n      Splitting series\n      Wave Viewer (mitral valve)\n     Contribute to this documentation Feel free to update this content, just click the Edit this page link displayed on top right of each page, and pullrequest it\nYour modification will be deployed automatically when merged.\n Documentation website This current documentation has been statically generated with Hugo with a simple command : hugo \u0026ndash; source code is available at GitHub.\n"
}]